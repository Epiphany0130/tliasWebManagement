<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gyqstd.mapper.StudentMapper">
    <select id="list" resultType="com.gyqstd.pojo.Student">
        SELECT
        id,
        name,
        no,
        gender,
        phone,
        id_card,
        is_college,
        address,
        degree,
        graduation_date,
        clazz_id,
        violation_count,
        violation_score,
        create_time,
        update_time,
        (select name from Clazz where id = student.clazz_id) AS clazzName
        FROM Student
        <where>
            <if test="name != null and name != ''">
                AND name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="degree != null">
                AND degree &lt;= #{degree}
            </if>
            <if test="clazzId != null">
                AND clazz_id = #{clazzId}
            </if>
        </where>
    </select>

    <insert id="add">
        insert into student(name, no, gender, phone, id_card, is_college
        <if test="address != null">, address</if>
        <if test="degree != null">, degree</if>
        <if test="graduationDate != null">, graduation_date</if>
        <if test="clazzId != null">, clazz_id</if>,
        create_time, update_time)
        values (#{name}, #{no}, #{gender}, #{phone}, #{idCard}, #{isCollege}
        <if test="address != null">, #{address}</if>
        <if test="degree != null">, #{degree}</if>
        <if test="graduationDate != null">, #{graduationDate}</if>
        <if test="clazzId != null">, #{clazzId}</if>
        , now(), now())
    </insert>

    <!--定义ResultMap-->
    <resultMap id="studentResultMap" type="com.gyqstd.pojo.Student">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="no" property="no"/>
        <result column="gender" property="gender"/>
        <result column="phone" property="phone"/>
        <result column="id_card" property="idCard"/>
        <result column="is_college" property="isCollege"/>
        <result column="address" property="address"/>
        <result column="degree" property="degree"/>
        <result column="graduation_date" property="graduationDate"/>
        <result column="clazz_id" property="clazzId"/>
        <result column="violation_count" property="violationCount"/>
        <result column="violation_score" property="violationScore"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <select id="getById" resultMap="studentResultMap">
        select id, name, no, gender, phone, id_card, is_college, address, degree, graduation_date, clazz_id, violation_count, violation_score, create_time, update_time
        from Student
        where id = #{id}
    </select>

    <update id="updateById">
        update student
        <set>
            <if test="id != null">id = #{id},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="no != null and no != ''">no = #{no},</if>
            <if test="gender != null">gender= #{gender},</if>
            <if test="phone != null and phone != ''">phone = #{phone},</if>
            <if test="degree != null">degree = #{degree},</if>
            <if test="idCard != null and idCard != ''">id_card = #{idCard},</if>
            <if test="isCollege != null">is_college = #{isCollege},</if>
            <if test="address != null">address = #{address},</if>
            <if test="graduationDate != null">graduation_date = #{graduationDate},</if>
            <if test="violationCount != null">violation_count = #{violationCount},</if>
            <if test="violationScore != null">violation_score = #{violationScore},</if>
            <if test="clazzId != null">clazz_id = #{clazzId},</if>
            <if test="updateTime != null">update_time = now(),</if>
        </set>
        where id = #{id}
    </update>

    <delete id="deleteById">
        delete from student where id in
        <foreach collection = "ids" item = "id" separator = "," open = "(" close = ")">
            #{id}
        </foreach>
    </delete>

    <!-- 学员学历统计 -->
    <select id="countStudentDegreeData" resultType="java.util.Map">
        SELECT
            CASE degree
                WHEN 1 THEN '初中'
                WHEN 2 THEN '高中'
                WHEN 3 THEN '大专'
                WHEN 4 THEN '本科'
                WHEN 5 THEN '硕士'
                ELSE '其他'
                END AS name,
            COUNT(*) AS value
        FROM student
        GROUP BY degree
        ORDER BY degree
    </select>

    <!-- 班级人数统计 -->
    <select id="countStudentClazzData" resultType="java.util.Map">
        SELECT
            c.name AS clazz,
            COUNT(s.id) AS total
        FROM clazz c
                 LEFT JOIN student s ON c.id = s.clazz_id
        GROUP BY c.id, c.name
        ORDER BY c.name
    </select>
</mapper>